openapi: "3.0.0"
info:
  title: "ExplainaBoard"
  description: "Backend APIs for ExplainaBoard"
  version: "0.1.4"
  contact:
    email: "explainaboard@gmail.com"
  license:
    name: "MIT License"
    url: "https://github.com/neulab/explainaboard_web/blob/main/LICENSE"

servers:
  - url: https://explainaboard.inspiredco.ai/api
    description: Production
  - url: https://dev.explainaboard.inspiredco.ai/api
    description: Development
  - url: http://localhost:5000/api
    description: Local dev server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  /tasks:
    get:
      summary: Returns all task categories and tasks
      security: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaskCategory"

  /datasets/{dataset_id}:
    get:
      summary: Returns dataset metadata by id
      security: []
      description: Returns dataset metadata by id. id is the DB id so it is mostly used internally. See datasets MGet endpoints for general use.
      parameters:
        - in: path
          name: dataset_id
          example: 61611c3a414abfb115397ca5
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetMetadata"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"

  /datasets:
    get:
      summary: Returns a list of datasets
      security: []
      description: Returns a list of datasets. Returns empty list if current page is empty. Returns `total=0` if no match datasets.
      parameters:
        - in: query
          name: dataset_ids
          description: a string of comma separated dataset ids.
          schema:
            type: string
          example: "61611c3a414abfb115397ca5,61775d7f8795791d8d3846d4"
        - in: query
          name: dataset_name
          description: fuzzy match for dataset name
          schema:
            type: string
        - in: query
          name: task
          description: filter by task type
          schema:
            type: string
        - in: query
          name: page
          description: page number (0 indexed)
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: page_size
          description: number of items per page
          schema:
            type: integer
            default: 20
            minimum: 0

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetsReturn"

  /systems/{system_id}:
    get:
      summary: Returns system metadata info by id
      description: Returns a system_metadata by id. id is the DB id so it is mostly used internally.
      parameters:
        - in: path
          name: system_id
          schema:
            type: string
          required: true
          example: "619f8ef56e638da17b06b38a"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"
    delete:
      summary: Deletes a system by id
      parameters:
        - in: path
          name: system_id
          schema:
            type: string
          required: true
          example: "619f8ef56e638da17b06b38a"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "Success"

  /systems:
    get:
      summary: Returns a list of systems
      description: only public systems are returned for unauthenticated requests
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
        - {}

      parameters:
        - in: query
          name: system_name
          description: fuzzy match for system name
          schema:
            type: string
        - in: query
          name: task
          description: filter by task type
          schema:
            type: string
        - in: query
          name: dataset
          description: dataset name
          schema:
            type: string
        - in: query
          name: subdataset
          description: subdataset name
          schema:
            type: string
        - in: query
          name: split
          description: dataset split
          schema:
            type: string
        - in: query
          name: page
          description: page number (0 indexed)
          schema:
            type: integer
            default: 0
        - in: query
          name: page_size
          description: number of items per page
          schema:
            type: integer
            default: 20
        - in: query
          name: sort_field
          description: supports `created_at` (default) and metric names.
          schema:
            type: string
            example: Accuracy
        - in: query
          name: sort_direction
          schema:
            type: string
            description: default is "desc"
            example: "desc"
            enum: ["asc", "desc"]
        - in: query
          name: creator
          schema:
            type: string
            description: email of the creator
        - in: query
          name: shared_users
          schema:
            type: array
            items:
              type: string
            description: list of emails with whom the system is shared

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemsReturn"

    post:
      summary: Submits a system
      description: Submits a system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemCreateProps"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/System"
        "400":
          description: INPUT ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIError"

  /systems/{system_id}/outputs:
    get:
      summary: Returns a list of outputs of a particular system.
      description: This will fail if the user doesn't have permissions for that system.
      security:
        - ApiKeyAuth: [ ]
        - BearerAuth: [ ]
        - { }
      parameters:
        - in: path
          name: system_id
          description: system id
          schema:
            type: string
          required: true
          example: "61b02e0baadd2f674845b1c2"
        - in: query
          name: output_ids
          description: multiple output_ids, comma-separated
          schema:
            type: string
          example: "1,5,6"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemOutputsReturn"

  /systems/analyses:
    post:
      summary: Returns analysis result(s) of one or multiple systems
      description: Returns analysis result(s) of one or multiple systems
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                system_ids:
                  description: a string of comma-separated system ids
                  type: string
                  example: "61b02e0baadd2f674845b1c2,6254e4cd0f1133e7436ef298"
                pairwise_performance_gap:
                  description: returns the pairwise performance gap. Requires the length of systems_ids to be 2.
                  type: boolean
                feature_to_bucket_info:
                  description: feature -> bucket info
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      number:
                        type: integer
                      setting:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                          minItems: 2
                          maxItems: 2
                        example: [[0.0, 0.4], [0.4, 1.0]]
              required:
                [system_ids, pairwise_performance_gap, feature_to_bucket_info]

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemAnalysesReturn"

  /info:
    get:
      summary: information for environment identifier, backend version, login URL, etc. (not intent for public users)
      security: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  env:
                    type: string
                  auth_url:
                    type: string
                    format: url
                  api_version:
                    type: string
                required: [env, auth_url, api_version]
  /user:
    get:
      summary: get user info
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

components:
  securitySchemes:
    ApiKeyAuth:
      type: http
      scheme: basic
      description: use user email and API key to authenticate
    BearerAuth:
      type: http
      scheme: bearer
      description: use JWT to authenticate (for web app only)

  schemas:
    # The schema for primitive types do not get generated well in flask.
    # Avoid using them.
    # TaskId:
    #   type: integer
    #   format: int64

    # DatasetId:
    #   type: integer
    #   format: int64

    AnyType:
      oneOf:
        - type: boolean
        - type: integer
          nullable: true
        - type: string
          nullable: true
        - type: array
          items: {}
        - type: object

    Value:
      type: object
      properties:
        dtype:
          type: string
        description:
          type: string
          nullable: true
        is_bucket:
          type: boolean
        require_training_set:
          type: boolean
        bucket_info:
          # TODO(chihhao) define detailed fields
          type: object
          nullable: true
        id:
          type: string
          nullable: true
        _type:
          type: string

    ClassLabel:
      type: object
      properties:
        num_classes:
          type: integer
        names:
          type: array
          items:
            type: string
        description:
          type: string
          nullable: true
        names_file:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        is_bucket:
          type: boolean
        require_training_set:
          type: boolean
        bucket_info:
          type: object
          nullable: true
        _type:
          type: string

    SystemInfoFeature:
      # TODO(chihhao) Commented out for now as it's not clear why using oneOf causes validaiton failure
      # oneOf:
      #   - $ref: '#/components/schemas/Value'
      #   - $ref: '#/components/schemas/ClassLabel'
      # TODO(chihhao) define detailed fields
      type: object

    SystemInfo:
      description: Information about a system output, used in SDK's fine-grained analysis
      type: object
      properties:
        task_name:
          type: string
          example: "text-classification"
        system_name:
          type: string
          example: "sst2-cnn"
        dataset_name:
          type: string
          nullable: true
        sub_dataset_name:
          type: string
          nullable: true
        dataset_split:
          type: string
          nullable: true
        source_language:
          type: string
          example: en
        target_language:
          type: string
          example: en
        reload_stat:
          type: boolean
        is_print_case:
          type: boolean
        conf_value:
          type: number
        system_details:
          type: object
          nullable: True
        metric_configs:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              source_language:
                type: string
                nullable: True
              target_language:
                type: string
                nullable: True
              cls_name:
                type: string
            additionalProperties: true
            required: [name, cls_name]
        source_tokenizer:
          type: object
          properties:
            cls_name:
              type: string
              example: "SingleSpaceTokenizer"
        target_tokenizer:
          type: object
          properties:
            cls_name:
              type: string
              example: "SingleSpaceTokenizer"
        features:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SystemInfoFeature"
        results:
          type: object
          properties:
            overall:
              type: object
              description: metric_name -> metric_value
              additionalProperties:
                $ref: "#/components/schemas/Performance"
            calibration:
              type: array
              items:
                type: string
            fine_grained:
              type: object
          required: [overall, calibration, fine_grained]
      required:
        [
          task_name,
          system_name,
          source_language,
          target_language,
          reload_stat,
          is_print_case,
          conf_value,
          source_tokenizer,
          target_tokenizer,
          features,
          results,
          metric_configs,
        ]

    APIError:
      type: object
      properties:
        error_code:
          type: integer
        detail:
          type: string
          description: error message
      required: [error_code, detail]

    Time:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          description: UTC
        last_modified:
          type: string
          format: date-time
          description: UTC
      required: [created_at, last_modified]

    TaskCategory:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
      required: [name, description, tasks]

    Task:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        supported_metrics:
          type: array
          items:
            type: string
        supported_formats:
          type: object
          properties:
            custom_dataset:
              type: array
              items:
                type: string
            system_output:
              type: array
              items:
                type: string
          required: [custom_dataset, system_output]
      required: [name, description, supported_metrics, supported_formats]

    SystemOutput:
      type: object
      properties:
        id:
          type: string
      additionalProperties: true
      required: [id]

    TaskMetadata:
      type: object
      properties:
        task_metadata_id:
          type: string
        task_name:
          type: string
        task_description:
          type: string
        task_category:
          type: array
          items:
            type: string
        datasets:
          type: object
      required: [task_metadata_id, task_name]

    SystemCreateProps:
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/SystemMetadata"
        system_output:
          $ref: "#/components/schemas/SystemOutputProps"
        custom_dataset:
          $ref: "#/components/schemas/SystemOutputProps"
      required: [metadata, system_output]

    SystemMetadata:
      type: object
      properties:
        task:
          type: string
          example: "text_classification"
        is_private:
          type: boolean
          default: True
        shared_users:
          type: array
          items:
            type: string
          description: space-separated list of emails with which system is shared
          example: ["hello@gmail.com", "world@gmail.com"]
        dataset_metadata_id:
          type: string
        dataset_split:
          type: string
          description: required if dataset_metadata_id specified
          example: test
        system_name:
          type: string
        metric_names:
          type: array
          items:
            type: string
          example: [Accuracy]
        source_language:
          type: string
          example: en
        target_language:
          type: string
          example: en
        system_details:
          type: object
          description: a place to store arbitrary system details you want to remember
      required:
        [
          task,
          is_private,
          system_name,
          metric_names,
          source_language,
          target_language,
        ]

    SystemOutputProps:
      type: object
      properties:
        data:
          type: string
          format: base64
          description: base64 encoded file
        file_type:
          type: string
      required: [data, file_type]

    System:
      allOf:
        - type: object
        - properties:
            system_id:
              type: string
            creator:
              type: string
              description: user email
            shared_users:
              type: array
              items:
                type: string
              description: list of emails with which system is shared
            is_private:
              type: boolean
            system_info:
              $ref: "#/components/schemas/SystemInfo"
            # TODO(chihhao) Deduplication of dataset information here and in system_info
            dataset:
              description: if not specified, it is undefined
              type: object
              properties:
                dataset_id:
                  type: string
                dataset_name:
                  type: string
                sub_dataset:
                  type: string
                  nullable: true
                tasks:
                  type: array
                  items:
                    type: string
              required: [dataset_id, dataset_name, tasks]
            system_details:
              type: object
              description: a place to store arbitrary system details you want to remember
            active_features:
              description: Active features of a system, used in SDK's fine-grained analysis
              type: array
              items:
                type: string
            metric_stats:
              description: An array of sufficient statistics for each metric, used in SDK's fine-grained analysis
              type: array
              items:
                type: number
          required:
            [
              system_id,
              is_private,
              system_info,
              active_features,
              metric_stats,
            ]
        - $ref: "#/components/schemas/Time"

    DatasetFeature:
      type: object
      properties:
        type:
          type: string
        label:
          type: boolean
        raw_feature:
          type: boolean
        mapping:
          type: string
          nullable: true
        dataset_level:
          type: string
          nullable: true
        sample_level:
          type: string
          nullable: true

    DatasetMetadata:
      type: object
      properties:
        dataset_id:
          type: string
          example: "61611c3a414abfb115397ca5"
        dataset_name:
          type: string
        sub_dataset:
          type: string
          description: sub dataset id (TODO)
          nullable: true
        split:
          type: object
          additionalProperties:
            type: integer
        summary:
          type: string
        homepage:
          type: string
          format: uri
          nullable: true
        repository:
          type: string
          format: uri
          nullable: true
        leaderboard:
          type: string
        person_of_contact:
          type: string
          nullable: true
        tasks:
          type: array
          items:
            type: string
            description: task name
        task_categories:
          type: array
          items:
            type: string
            description: task category name
        languages:
          type: array
          items:
            type: string
        features:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/DatasetFeature"
        speaker_demographic:
          type: object
        annotator_demographic:
          type: object
        speech_situation:
          type: object
        huggingface_link:
          type: string
          format: url
      required:
        - dataset_id
        - dataset_name
        - tasks

    DatasetsReturn:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/DatasetMetadata"
        total:
          type: integer
          description: total number of matching datasets
          example: 20
      required:
        - datasets
        - total

    SystemOutputsReturn:
      type: object
      properties:
        system_outputs:
          type: array
          items:
            $ref: "#/components/schemas/SystemOutput"
        total:
          type: integer
          description: total number of matching system outputs
          example: 20
      required:
        - system_outputs
        - total

    SystemsReturn:
      type: object
      properties:
        systems:
          type: array
          items:
            $ref: "#/components/schemas/System"
        total:
          type: integer
          description: total number of matching systems
          example: 20
      required:
        - systems
        - total

    BucketPerformance:
      type: object
      properties:
        bucket_interval:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        n_samples:
          type: number
        bucket_samples:
          type: array
          items:
            $ref: '#/components/schemas/BucketCase'
        performances:
          type: array
          items:
            $ref: "#/components/schemas/Performance"
      required: [bucket_interval, n_samples, bucket_samples, performances]

    SingleAnalysisReturn:
      type: object
      description: feature -> bucket interval
      additionalProperties:
        type: array
        items:
          $ref: "#/components/schemas/BucketPerformance"

    SystemAnalysesReturn:
      type: object
      properties:
        single_analyses:
          type: object
          description: system_id -> SingleAnalysisReturn
          additionalProperties:
            $ref: "#/components/schemas/SingleAnalysisReturn"
        pairwise_performance_gap:
          type: object
      required: [single_analyses]

    Performance:
      type: object
      properties:
        metric_name:
          type: string
        value:
          type: number
        confidence_score_low:
          type: number
          nullable: true
        confidence_score_high:
          type: number
          nullable: true
      required: [metric_name, value]

    BucketCase:
      type: object
      properties:
        sample_id:
          type: integer
      additionalProperties:
        type: string
        properties:
          code:
            type: integer
          text:
            type: string

    User:
      type: object
      properties:
        email:
          type: string
        preferred_username:
          type: string
        username:
          type: string
        api_key:
          type: string
      required: [email, preferred_username, username, api_key]
